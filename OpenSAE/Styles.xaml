<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:converters="clr-namespace:OpenSAE.Converters"
                    xmlns:local="clr-namespace:OpenSAE"
                    xmlns:controls="clr-namespace:OpenSAE.Controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <converters:ColorConversionConverter x:Key="colorConversionConverter" />
    <converters:ColorSolidBrushConverter x:Key="colorSolidBrushConverter" />
    <converters:TransparencyAlphaConverter x:Key="alphaConverter" />
    <converters:ColorSolidBrushConverter x:Key="colorToneSolidBrushConverter" UseToneCurve="True" />
    <converters:UnitWidthZoomConverter ValueAtZero="960" ValueAtHalf="240" ValueAtFull="24" x:Key="symbolUnitWidthZoomConverter" />

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="iconMenuItem">
        <MenuItem Header="{TemplateBinding Header}" InputGestureText="{TemplateBinding InputGestureText}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
            <MenuItem.Icon>
                <TextBlock FontSize="16" FontFamily="Segoe MDL2 Assets" Text="{TemplateBinding Icon}" />
            </MenuItem.Icon>
        </MenuItem>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="mirroredIconMenuItem">
        <MenuItem Header="{TemplateBinding Header}" InputGestureText="{TemplateBinding InputGestureText}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
            <MenuItem.Icon>
                <TextBlock FontSize="16" FontFamily="Segoe MDL2 Assets" Text="{TemplateBinding Icon}" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <ScaleTransform ScaleX="-1" />
                    </TextBlock.RenderTransform>
                </TextBlock>
            </MenuItem.Icon>
        </MenuItem>
    </ControlTemplate>

    <Style TargetType="controls:ListBoxScroll" BasedOn="{StaticResource {x:Type ListBox}}"></Style>

    <Style TargetType="controls:MultiSelectTreeView" BasedOn="{StaticResource {x:Type TreeView}}"></Style>

    <Style TargetType="TextBlock" x:Key="iconText">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="TextBlock" x:Key="titleText" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="28" />
    </Style>

    <Style TargetType="TextBlock" x:Key="subtitleText" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0 20 0 5" />
    </Style>

    <Style TargetType="Button" x:Key="statusBarIconButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
    </Style>

    <Style TargetType="Button" x:Key="standardButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="15 3" />
    </Style>

    <ControlTemplate x:Key="BulletTemplate" TargetType="{x:Type ContentControl}">
        <BulletDecorator>
            <BulletDecorator.Bullet>
                <Ellipse Height="9" Width="9" Fill="Black" />
            </BulletDecorator.Bullet>
            <ContentPresenter />
        </BulletDecorator>
    </ControlTemplate>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{DynamicResource ABrush.Foreground.Static}" Stroke="{DynamicResource ABrush.Foreground.Static}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource ABrush.Tone1.Background.Static}" />
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ABrush.Foreground.Static}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ABrush.Foreground.Static}" />
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource ABrush.Tone4.Background.MouseOver}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource ABrush.Foreground.Static}" />
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ABrush.Tone5.Background.MouseOver}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MultiSelectTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Tone4.Background.MouseOver}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton 
                                x:Name="Expander" 
                                ClickMode="Press" 
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                            />
                        <Border 
                                x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="1" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter 
                                    x:Name="PART_Header" 
                                    ContentSource="Header" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter 
                                x:Name="ItemsHost" 
                                Grid.ColumnSpan="2" 
                                Grid.Column="1" 
                                Grid.Row="1"
                            />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="controls:MultiSelectTreeView.IsItemSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ABrush.AccentTone3.Background.Static}" />
                        </Trigger>
                        <!-- Removed to not dim selection when control is not active -->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="controls:MultiSelectTreeView.IsItemSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="local:TreeViewDropHighlighter.IsPossibleDropTarget" Value="True">
                <Setter Property="Background" Value="{DynamicResource ABrush.AccentTone3.Background.Static}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>