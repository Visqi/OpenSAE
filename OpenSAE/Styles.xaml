<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:converters="clr-namespace:OpenSAE.Converters"
                    xmlns:local="clr-namespace:OpenSAE"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <converters:ColorConversionConverter x:Key="colorConversionConverter" />
    <converters:ColorSolidBrushConverter x:Key="colorSolidBrushConverter" />
    <converters:TransparencyAlphaConverter x:Key="alphaConverter" />
    <converters:ColorSolidBrushConverter x:Key="colorToneSolidBrushConverter" UseToneCurve="True" />
    <converters:UnitWidthZoomConverter ValueAtZero="960" ValueAtHalf="240" ValueAtFull="24" x:Key="symbolUnitWidthZoomConverter" />

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="iconMenuItem">
        <MenuItem Header="{TemplateBinding Header}" InputGestureText="{TemplateBinding InputGestureText}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
            <MenuItem.Icon>
                <TextBlock FontSize="16" FontFamily="Segoe MDL2 Assets" Text="{TemplateBinding Icon}" />
            </MenuItem.Icon>
        </MenuItem>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="mirroredIconMenuItem">
        <MenuItem Header="{TemplateBinding Header}" InputGestureText="{TemplateBinding InputGestureText}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
            <MenuItem.Icon>
                <TextBlock FontSize="16" FontFamily="Segoe MDL2 Assets" Text="{TemplateBinding Icon}" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <ScaleTransform ScaleX="-1" />
                    </TextBlock.RenderTransform>
                </TextBlock>
            </MenuItem.Icon>
        </MenuItem>
    </ControlTemplate>

    <Style TargetType="TextBlock" x:Key="iconText">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="TextBlock" x:Key="titleText">
        <Setter Property="FontSize" Value="28" />
    </Style>

    <Style TargetType="TextBlock" x:Key="subtitleText">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0 10 0 5" />
    </Style>

    <Style TargetType="Button" x:Key="statusBarIconButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
    </Style>

    <Style TargetType="Button" x:Key="standardButton">
        <Setter Property="Padding" Value="15 3" />
    </Style>

    <ControlTemplate x:Key="BulletTemplate" TargetType="{x:Type ContentControl}">
        <BulletDecorator>
            <BulletDecorator.Bullet>
                <Ellipse Height="9" Width="9" Fill="Black" />
            </BulletDecorator.Bullet>
            <ContentPresenter />
        </BulletDecorator>
    </ControlTemplate>

    <Style TargetType="TreeViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                           ClickMode="Press"
                                           Name="Expander">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="UIElement.Focusable" Value="False"/>
                                    <Setter Property="FrameworkElement.Width" Value="16"/>
                                    <Setter Property="FrameworkElement.Height" Value="16"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Padding="5,5,5,5"
                                                             Background="#00FFFFFF"
                                                             Width="16"
                                                             Height="16">
                                                    <Path Fill="#FFFFFFFF"
                                                               Stroke="#FF818181"
                                                               Name="ExpandPath">
                                                        <Path.Data>
                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                        </Path.Data>
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                        <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF595959</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF262626</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                        <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF27C7F7</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFCCEEFB</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="UIElement.IsMouseOver" Value="True"/>
                                                            <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF1CC4F7</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FF82DFFB</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                     Padding="{TemplateBinding Control.Padding}"
                                     BorderBrush="{TemplateBinding Border.BorderBrush}"
                                     Background="{TemplateBinding Panel.Background}"
                                     Name="Bd"
                                     SnapsToDevicePixels="True"
                                     Grid.Column="1">
                            <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}"
                                                   ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                   ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                   ContentSource="Header"
                                                   Name="PART_Header"
                                                   HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                   SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ItemsPresenter Name="ItemsHost"
                                             Grid.Column="1"
                                             Grid.Row="1"
                                             Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                            <Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="UIElement.Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected" Value="True">
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="local:TreeViewDropHighlighter.IsPossibleDropTarget" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>