<Window x:Class="OpenSAE.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:OpenSAE.Models"
        xmlns:views="clr-namespace:OpenSAE.Views"
        xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker" 
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=models:AppModel}"
        Closing="Window_Closing"
        Title="{Binding AppTitle}"
        ResizeMode="CanResizeWithGrip"
        MinHeight="500"
        Height="500"
        MinWidth="900"
        Width="1000"
        x:Name="mainWindow">
    <Window.Resources>
        <DiffuseMaterial x:Key="borderMaterial">
            <DiffuseMaterial.Brush>
                <SolidColorBrush Color="Black" />
            </DiffuseMaterial.Brush>
        </DiffuseMaterial>

        <DataTemplate DataType="{x:Type models:SymbolArtModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Symbol Art name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name}" Margin="5" />
                    <TextBlock Text="Size" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <ComboBox ItemsSource="{Binding SizeOptions}" Margin="5" DisplayMemberPath="Text" SelectedValuePath="Value" SelectedValue="{Binding Size}" />
                    <TextBlock Text="Sound effect" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <ComboBox ItemsSource="{Binding SoundEffectOptions}" Margin="5" DisplayMemberPath="Text" SelectedValuePath="Value" SelectedValue="{Binding SoundEffect}" />
                </UniformGrid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:SymbolArtGroupModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Group name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                    <TextBlock Text="" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <CheckBox Margin="5" Content="Enable group" IsChecked="{Binding Visible}" />
                </UniformGrid>
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:SymbolArtLayerModel}">
            <StackPanel>
                <UniformGrid Columns="2" Margin="10 5">
                    <TextBlock Text="Layer name" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                    <TextBlock Text="" HorizontalAlignment="Right" Margin="5 0" VerticalAlignment="Center" />
                    <CheckBox Margin="5" Content="Enable layer" IsChecked="{Binding Visible}" />
                </UniformGrid>
                <views:LayerVertexEditor />
            </StackPanel>
        </DataTemplate>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenFileCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewFileCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}" />
        <KeyBinding Modifiers="Ctrl+Alt" Key="S" Command="{Binding SaveAsCommand}" />

        <KeyBinding Modifiers="Ctrl" Key="OemComma" Command="{Binding CurrentItemCommand}" CommandParameter="toggleVisibility" />
        <KeyBinding Modifiers="Ctrl" Key="D" Command="{Binding CurrentItemCommand}" CommandParameter="deselect" />
        <KeyBinding Modifiers="Shift" Key="Delete" Command="{Binding CurrentItemCommand}" CommandParameter="delete" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="D" Command="{Binding CurrentItemCommand}" CommandParameter="duplicate" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="E" Command="{Binding CurrentItemCommand}" CommandParameter="addGroup" />
        <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding CurrentItemCommand}" CommandParameter="addLayer" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="F" Command="{Binding CurrentItemCommand}" CommandParameter="flipY" />
        <KeyBinding Modifiers="Ctrl" Key="F" Command="{Binding CurrentItemCommand}" CommandParameter="flipX" />
        <KeyBinding Modifiers="Ctrl" Key="R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="90" />
        <KeyBinding Modifiers="Ctrl+Shift" Key="R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="-90" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="250" />
        </Grid.ColumnDefinitions>
        <Menu DockPanel.Dock="Top" Grid.ColumnSpan="5" Padding="5">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewFileCommand}" InputGestureText="Ctrl+N" Template="{StaticResource iconMenuItem}" Icon="{StaticResource newFileIcon}" />
                <MenuItem Header="_Open..." Command="{Binding OpenFileCommand}" InputGestureText="Ctrl+O" Template="{StaticResource iconMenuItem}" Icon="{StaticResource openFileIcon}" />
                <MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Ctrl+S" Template="{StaticResource iconMenuItem}" Icon="{StaticResource saveIcon}" />
                <MenuItem Header="_Save as..." Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Alt+S" />
                <Separator />
                <MenuItem Header="_Recent files" ItemsSource="{Binding RecentFiles}">
                    <MenuItem.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </MenuItem.ItemTemplate>
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding DataContext.OpenFileCommand, ElementName=mainWindow}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Add new symbol" Command="{Binding CurrentItemCommand}" CommandParameter="addLayer" InputGestureText="Ctrl+E" Template="{StaticResource iconMenuItem}" Icon="{StaticResource addIcon}" />
                <MenuItem Header="_Add new group" Command="{Binding CurrentItemCommand}" CommandParameter="addGroup" InputGestureText="Ctrl+Shift+E" Template="{StaticResource iconMenuItem}" Icon="{StaticResource newFolderIcon}" />
                <MenuItem Header="_Clear selection" Command="{Binding CurrentItemCommand}" CommandParameter="deselect" InputGestureText="Ctrl+D"  />
                <Separator />
                <MenuItem Header="Toggle item _visibility" Command="{Binding CurrentItemCommand}" CommandParameter="toggleVisibility" InputGestureText="Ctrl+," Template="{StaticResource iconMenuItem}" Icon="{StaticResource viewIcon}" />
                <MenuItem Header="_Duplicate item" Command="{Binding CurrentItemCommand}" CommandParameter="duplicate" InputGestureText="Ctrl+Shift+D" Template="{StaticResource iconMenuItem}" Icon="{StaticResource copyIcon}" />
                <MenuItem Header="_Delete item" Command="{Binding CurrentItemCommand}" CommandParameter="delete" InputGestureText="Shift+Del" Template="{StaticResource iconMenuItem}" Icon="{StaticResource deleteIcon}" />
                <MenuItem Header="_Transform selected item">
                    <MenuItem Header="Flip _horizontally" Command="{Binding CurrentItemCommand}" CommandParameter="flipX" InputGestureText="Ctrl+F" Template="{StaticResource iconMenuItem}" Icon="{StaticResource flipXIcon}" />
                    <MenuItem Header="Flip _vertically" Command="{Binding CurrentItemCommand}" CommandParameter="flipY" InputGestureText="Ctrl+Shift+F" Template="{StaticResource iconMenuItem}" Icon="{StaticResource flipYIcon}" />
                    <Separator />
                    <MenuItem Header="_Rotate 90 degrees" InputGestureText="Ctrl+R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="90" Template="{StaticResource iconMenuItem}" Icon="{StaticResource rotateIcon}" />
                    <MenuItem Header="Rotate 90 degrees _counter-clockwise" InputGestureText="Ctrl+Shift+R" Command="{Binding RotateCurrentItemCommand}" CommandParameter="-90" Template="{StaticResource mirroredIconMenuItem}" Icon="{StaticResource rotateIcon}" />
                    <MenuItem Header="R_otate 180 degrees" Command="{Binding RotateCurrentItemCommand}" CommandParameter="180" Template="{StaticResource iconMenuItem}" Icon="{StaticResource rotateIcon}" />
                </MenuItem>
            </MenuItem>
        </Menu>
        <DockPanel Grid.Row="1">
            <Menu DockPanel.Dock="Bottom" Padding="0 5">
                <MenuItem Header="Add layer" />
                <MenuItem Header="Add group" />
                <MenuItem Header="Delete" Command="{Binding CurrentItemCommand}" CommandParameter="delete" />
            </Menu>
            <TreeView BorderThickness="0" ItemsSource="{Binding CurrentSymbolArt.RootItems}" SelectedItemChanged="TreeView_SelectedItemChanged">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding Visible}" IsTabStop="False" />
                            <TextBlock Margin="5 0" Text="{Binding Name}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </DockPanel>

        <GridSplitter Grid.Row="1" Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

        <Rectangle Grid.Row="1" Grid.Column="2">
            <Rectangle.Fill>
                <DrawingBrush TileMode="Tile" Viewport="0,0,32,32" ViewportUnits="Absolute">
                    <DrawingBrush.Drawing>
                        <GeometryDrawing Geometry="M0,0 H1 V1 H2 V2 H1 V1 H0Z" Brush="#ddd"/>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Rectangle.Fill>
        </Rectangle>

        <GridSplitter Grid.Row="1" Grid.Column="3" Width="5" HorizontalAlignment="Stretch" />

        <DockPanel Grid.Row="1" Grid.Column="4">
            <ContentControl DockPanel.Dock="Top" Grid.Row="1" Grid.Column="4" Content="{Binding SelectedItem}" />
            <colorpicker:StandardColorPicker 
                SelectedColor="{Binding SelectedItem.Color, Mode=TwoWay}" 
                DockPanel.Dock="Top" 
                ShowAlpha="False"
                Width="96" />
            <DockPanel DockPanel.Dock="Top" Margin="5 0">
                <TextBlock DockPanel.Dock="Left" Text="Opacity" />
                <Slider Minimum="0" Maximum="1" Value="{Binding SelectedItem.Alpha}" DockPanel.Dock="Top" Margin="5 0 0 0" TickFrequency="0.1429" TickPlacement="BottomRight" />
            </DockPanel>
            
            <views:SymbolSelector
                DataContext="{Binding SymbolsList}"
                SelectedSymbol="{Binding DataContext.SelectedItem.Symbol, ElementName=mainWindow, Mode=TwoWay}"
                Visibility="{Binding DataContext.SelectedItemIsLayer, ElementName=mainWindow, Converter={StaticResource booleanToVisibilityConverter}}">
            </views:SymbolSelector>
        </DockPanel>

        <DockPanel Grid.Row="1" Grid.Column="2">

            <StatusBar DockPanel.Dock="Bottom" Padding="3">
                <TextBlock Style="{StaticResource iconText}" Text="{StaticResource gridIcon}" />
                <TextBlock Text="{Binding MouseSymbolPosition, ElementName=renderer}" Width="45" />
                <Separator />
                <TextBlock>
                    Hold shift to select. Ctrl+click to rotate. Click and drag vertex to edit. Click and drag elsewhere to move.
                </TextBlock>
            </StatusBar>
            <Grid>
                <ToolBarTray Background="Transparent" Panel.ZIndex="2" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <ToolBar Padding="2" FontSize="24">
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource addIcon}" ToolTip="Adds a new symbol to the current group (Ctrl+E)" Command="{Binding CurrentItemCommand}" CommandParameter="addLayer" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource newFolderIcon}" ToolTip="Adds a new group (Ctrl+Shift+E)" Command="{Binding CurrentItemCommand}" CommandParameter="addGroup" />
                        <Separator />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource viewIcon}" ToolTip="Toggle the visibility of the current symbol or group (Ctrl+,)" Command="{Binding CurrentItemCommand}" CommandParameter="toggleVisibility" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource flipXIcon}" ToolTip="Horizontally flips the current symbol or group" Command="{Binding CurrentItemCommand}" CommandParameter="flipX" />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource flipYIcon}" ToolTip="Vertically flips the current symbol or group" Command="{Binding CurrentItemCommand}" CommandParameter="flipY" />
                        
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource rotateIcon}" ToolTip="Rotate the current symbol or group clockwise by 90 degrees (Ctrl+R)" Command="{Binding RotateCurrentItemCommand}" CommandParameter="90" />
                        
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource copyIcon}" ToolTip="Creates a copy of the current symbol or group (Ctrl+Shift+D)" Command="{Binding CurrentItemCommand}" CommandParameter="duplicate" />
                        <Separator />
                        <Button FontFamily="Segoe MDL2 Assets" Content="{StaticResource deleteIcon}" ToolTip="Delete the current symbol or group (Shift+Del)" Command="{Binding CurrentItemCommand}" CommandParameter="delete" />
                    </ToolBar>
                </ToolBarTray>
                <views:SymbolArtRenderer x:Name="renderer" ClipToBounds="True" DataContext="{Binding CurrentSymbolArt}" SelectedLayer="{Binding DataContext.SelectedItem, ElementName=mainWindow, Mode=TwoWay}" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </Grid>
        </DockPanel>
    </Grid>
</Window>
