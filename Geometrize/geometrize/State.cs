// Generated by Haxe 4.3.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace geometrize {
	public class State : global::haxe.lang.HxObject {
		
		public State(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public State(global::geometrize.shape.Shape shape, int alpha, global::geometrize.bitmap.Bitmap target, global::geometrize.bitmap.Bitmap current, global::geometrize.bitmap.Bitmap buffer) {
			global::geometrize.State.__hx_ctor_geometrize_State(this, shape, alpha, target, current, buffer);
		}
		
		
		protected static void __hx_ctor_geometrize_State(global::geometrize.State __hx_this, global::geometrize.shape.Shape shape, int alpha, global::geometrize.bitmap.Bitmap target, global::geometrize.bitmap.Bitmap current, global::geometrize.bitmap.Bitmap buffer) {
			unchecked {
				if (( shape == null )) {
					throw ((global::System.Exception) (global::haxe.Exception.thrown("FAIL: shape != null")) );
				}
				
				__hx_this.shape = shape;
				__hx_this.alpha = alpha;
				__hx_this.score = ((double) (-1) );
				__hx_this.target = target;
				__hx_this.current = current;
				__hx_this.buffer = buffer;
			}
		}
		
		
		public global::geometrize.shape.Shape shape;
		
		public int alpha;
		
		public double score;
		
		public global::geometrize.bitmap.Bitmap target;
		
		public global::geometrize.bitmap.Bitmap current;
		
		public global::geometrize.bitmap.Bitmap buffer;
		
		public virtual double energy(double lastScore) {
			if (( this.score < 0 )) {
				this.score = global::geometrize.Core.energy(this.shape, this.alpha, this.target, this.current, this.buffer, lastScore);
			}
			
			return this.score;
		}
		
		
		public virtual global::geometrize.State mutate() {
			global::geometrize.State oldState = this.clone();
			this.shape.mutate();
			return oldState;
		}
		
		
		public virtual global::geometrize.State clone() {
			return new global::geometrize.State(((global::geometrize.shape.Shape) (this.shape.clone()) ), ((int) (this.alpha) ), ((global::geometrize.bitmap.Bitmap) (this.target) ), ((global::geometrize.bitmap.Bitmap) (this.current) ), ((global::geometrize.bitmap.Bitmap) (this.buffer) ));
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2027516754:
					{
						this.score = ((double) (@value) );
						return @value;
					}
					
					
					case 563521374:
					{
						this.alpha = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1351924992:
					{
						this.buffer = ((global::geometrize.bitmap.Bitmap) (@value) );
						return @value;
					}
					
					
					case 1273207865:
					{
						this.current = ((global::geometrize.bitmap.Bitmap) (@value) );
						return @value;
					}
					
					
					case 116192081:
					{
						this.target = ((global::geometrize.bitmap.Bitmap) (@value) );
						return @value;
					}
					
					
					case 2027516754:
					{
						this.score = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 563521374:
					{
						this.alpha = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 2082267937:
					{
						this.shape = ((global::geometrize.shape.Shape) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1214452573:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "clone", 1214452573)) );
					}
					
					
					case 1069478790:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "mutate", 1069478790)) );
					}
					
					
					case 2067310792:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "energy", 2067310792)) );
					}
					
					
					case 1351924992:
					{
						return this.buffer;
					}
					
					
					case 1273207865:
					{
						return this.current;
					}
					
					
					case 116192081:
					{
						return this.target;
					}
					
					
					case 2027516754:
					{
						return this.score;
					}
					
					
					case 563521374:
					{
						return this.alpha;
					}
					
					
					case 2082267937:
					{
						return this.shape;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2027516754:
					{
						return this.score;
					}
					
					
					case 563521374:
					{
						return ((double) (this.alpha) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1214452573:
					{
						return this.clone();
					}
					
					
					case 1069478790:
					{
						return this.mutate();
					}
					
					
					case 2067310792:
					{
						return this.energy(((double) (global::haxe.lang.Runtime.toDouble(dynargs[0])) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::HaxeArray<string> baseArr) {
			baseArr.push("buffer");
			baseArr.push("current");
			baseArr.push("target");
			baseArr.push("score");
			baseArr.push("alpha");
			baseArr.push("shape");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


